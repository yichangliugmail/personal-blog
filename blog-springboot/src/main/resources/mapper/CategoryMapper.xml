<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyc.mapper.CategoryMapper">

    <resultMap id="BaseResultMap" type="com.lyc.model.po.Category">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="categoryName" column="category_name" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,category_name,create_time,
        update_time
    </sql>
    <select id="selectCategoryVO" resultType="com.lyc.model.vo.CategoryVO">
        SELECT c.id,
               c.category_name,
               COUNT(a.id) AS article_count
        FROM t_category c
                 LEFT JOIN (SELECT id, category_id FROM t_article WHERE is_delete = 0 AND `status` = 1) a
                           ON c.id = a.category_id
        GROUP BY c.id
    </select>

    <select id="getCategoryVOList" resultType="com.lyc.model.vo.CategoryVO">
        SELECT id,category_name
        from t_category;
    </select>

    <select id="selectCategoryBackVO" resultType="com.lyc.model.vo.CategoryBackVO">
        SELECT c.id, c.category_name,COUNT( a.id ) AS article_count,c.create_time
        FROM t_category c
        LEFT JOIN t_article a
        ON c.id = a.category_id
        <where>
            <if test="keyword != null">
                category_name like concat('%',#{keyword},'%')
            </if>
        </where>
        GROUP BY c.id
        ORDER BY c.id DESC
        LIMIT #{limit},#{size}
    </select>

</mapper>
