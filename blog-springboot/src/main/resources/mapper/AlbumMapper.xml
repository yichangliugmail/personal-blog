<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyc.mapper.AlbumMapper">

    <resultMap id="BaseResultMap" type="com.lyc.model.po.Album">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="albumName" column="album_name" jdbcType="VARCHAR"/>
            <result property="albumCover" column="album_cover" jdbcType="VARCHAR"/>
            <result property="albumDesc" column="album_desc" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="TINYINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,album_name,album_cover,
        album_desc,status,create_time,
        update_time
    </sql>
    
    <select id="selectAlbumBackVOList" resultType="com.lyc.model.vo.AlbumBackVO">
        SELECT 
            a.id,
            album_name,
            album_cover,
            album_desc,
            status,
            COUNT(p.id) AS photo_count
        FROM 
            t_album a
            LEFT JOIN t_photo p on a.id = p.album_id
        <where>
            <if test="condition.keyword!=null">
                album_name like concat('%',#{condition.keyword},'%')
            </if>
        </where>
        GROUP BY a.id
        ORDER BY a.id DESC
        LIMIT #{limit},#{size}

    </select>
</mapper>
